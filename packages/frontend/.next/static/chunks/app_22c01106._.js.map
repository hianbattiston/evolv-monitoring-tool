{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/utils/dateUtils.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(relativeTime);\n\nexport function formatDistanceToNow(date: Date): string {\n  return dayjs(date).fromNow();\n}\n\nexport function formatDate(date: string | Date): string {\n  return dayjs(date).format('MMM D, YYYY h:mm A');\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,kJAAA,CAAA,UAAY;AAElB,SAAS,oBAAoB,IAAU;IAC5C,OAAO,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EAAE,MAAM,OAAO;AAC5B;AAEO,SAAS,WAAW,IAAmB;IAC5C,OAAO,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EAAE,MAAM,MAAM,CAAC;AAC5B","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/components/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport { formatDistanceToNow } from '../utils/dateUtils';\n\ninterface HeaderProps {\n  lastUpdated: Date | null;\n}\n\nexport default function Header({ lastUpdated }: HeaderProps) {\n  return (\n    <header className=\"bg-white shadow-md rounded-lg p-4 flex flex-col md:flex-row justify-between items-center\">\n      <div className=\"flex items-center mb-4 md:mb-0\">\n        <h1 className=\"text-2xl font-bold text-blue-700\">Evolv Experiments</h1>\n      </div>\n      \n      <div className=\"flex items-center space-x-2\">\n        <div className=\"text-sm text-gray-600\">\n          Last updated: {lastUpdated ? formatDistanceToNow(lastUpdated) : 'Never'}\n        </div>\n        {lastUpdated && (\n          <div className=\"h-2 w-2 rounded-full bg-green-500 animate-pulse\"></div>\n        )}\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAQe,SAAS,OAAO,EAAE,WAAW,EAAe;IACzD,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAAmC;;;;;;;;;;;0BAGnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;4BAAwB;4BACtB,cAAc,CAAA,GAAA,4HAAA,CAAA,sBAAmB,AAAD,EAAE,eAAe;;;;;;;oBAEjE,6BACC,6LAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAKzB;KAjBwB","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/components/MetricsPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { Experiment } from '../types/experiments';\n\ninterface MetricsPanelProps {\n  metrics: {\n    totalVisitors: number;\n    conversionRate: number;\n    averageSessionDuration: number;\n    revenuePerVisitor: number;\n  } | null;\n  experiment: Experiment;\n}\n\nexport default function MetricsPanel({ metrics }: MetricsPanelProps) {\n  const { totalVisitors, conversionRate, averageSessionDuration, revenuePerVisitor } = metrics || {};\n  \n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 mt-6\">\n      <h2 className=\"text-xl font-semibold mb-4\">Key Metrics</h2>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <MetricCard \n          title=\"Total Visitors\" \n          value={totalVisitors || 0} \n          suffix=\"visitors\"\n          icon={<UserIcon />}\n        />\n        \n        <MetricCard \n          title=\"Conversion Rate\" \n          value={conversionRate?.toFixed(2) || 0} \n          suffix=\"%\"\n          icon={<ConversionIcon />}\n        />\n        \n        <MetricCard \n          title=\"Avg. Session Duration\" \n          value={formatDuration(averageSessionDuration || 0)}\n          icon={<TimeIcon />}\n        />\n        \n        <MetricCard \n          title=\"Revenue per Visitor\" \n          value={`$${revenuePerVisitor?.toFixed(2) || 0}`}\n          icon={<MoneyIcon />}\n        />\n      </div>\n    </div>\n  );\n}\n\ninterface MetricCardProps {\n  title: string;\n  value: number | string;\n  suffix?: string;\n  icon: React.ReactNode;\n}\n\nfunction MetricCard({ title, value, suffix, icon }: MetricCardProps) {\n  return (\n    <div className=\"bg-gray-50 p-4 rounded-lg border border-gray-100\">\n      <div className=\"flex items-center mb-2\">\n        <div className=\"text-blue-500 mr-2\">{icon}</div>\n        <h3 className=\"text-sm font-medium text-gray-500\">{title}</h3>\n      </div>\n      <div className=\"flex items-baseline\">\n        <p className=\"text-2xl font-bold\">\n          {value}\n          {suffix && <span className=\"text-sm text-gray-500 ml-1\">{suffix}</span>}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction formatDuration(seconds: number): string {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}m ${secs}s`;\n}\n\n// Simple icons for metrics\nfunction UserIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nfunction ConversionIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nfunction TimeIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n\nfunction MoneyIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\" clipRule=\"evenodd\" />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;AAce,SAAS,aAAa,EAAE,OAAO,EAAqB;IACjE,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,GAAG,WAAW,CAAC;IAEjG,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAE3C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,OAAM;wBACN,OAAO,iBAAiB;wBACxB,QAAO;wBACP,oBAAM,6LAAC;;;;;;;;;;kCAGT,6LAAC;wBACC,OAAM;wBACN,OAAO,gBAAgB,QAAQ,MAAM;wBACrC,QAAO;wBACP,oBAAM,6LAAC;;;;;;;;;;kCAGT,6LAAC;wBACC,OAAM;wBACN,OAAO,eAAe,0BAA0B;wBAChD,oBAAM,6LAAC;;;;;;;;;;kCAGT,6LAAC;wBACC,OAAM;wBACN,OAAO,CAAC,CAAC,EAAE,mBAAmB,QAAQ,MAAM,GAAG;wBAC/C,oBAAM,6LAAC;;;;;;;;;;;;;;;;;;;;;;AAKjB;KApCwB;AA6CxB,SAAS,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAmB;IACjE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCAAsB;;;;;;kCACrC,6LAAC;wBAAG,WAAU;kCAAqC;;;;;;;;;;;;0BAErD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;;wBACV;wBACA,wBAAU,6LAAC;4BAAK,WAAU;sCAA8B;;;;;;;;;;;;;;;;;;;;;;;AAKnE;MAfS;AAiBT,SAAS,eAAe,OAAe;IACrC,MAAM,OAAO,KAAK,KAAK,CAAC,UAAU;IAClC,MAAM,OAAO,KAAK,KAAK,CAAC,UAAU;IAClC,OAAO,GAAG,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;AAC5B;AAEA,2BAA2B;AAC3B,SAAS;IACP,qBACE,6LAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,SAAQ;QAAY,MAAK;kBACnF,cAAA,6LAAC;YAAK,UAAS;YAAU,GAAE;YAAsD,UAAS;;;;;;;;;;;AAGhG;MANS;AAQT,SAAS;IACP,qBACE,6LAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,SAAQ;QAAY,MAAK;kBACnF,cAAA,6LAAC;YAAK,UAAS;YAAU,GAAE;YAAqH,UAAS;;;;;;;;;;;AAG/J;MANS;AAQT,SAAS;IACP,qBACE,6LAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,SAAQ;QAAY,MAAK;kBACnF,cAAA,6LAAC;YAAK,UAAS;YAAU,GAAE;YAAqH,UAAS;;;;;;;;;;;AAG/J;MANS;AAQT,SAAS;IACP,qBACE,6LAAC;QAAI,OAAM;QAA6B,WAAU;QAAU,SAAQ;QAAY,MAAK;;0BACnF,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,UAAS;gBAAU,GAAE;gBAAud,UAAS;;;;;;;;;;;;AAGjgB;MAPS","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/components/VisualizationSection.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Experiment } from '../types/experiments';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\n\ninterface VisualizationSectionProps {\n  experiment: Experiment;\n}\n\nexport default function VisualizationSection({ experiment }: VisualizationSectionProps) {\n  const [timeRange, setTimeRange] = useState<'hour' | 'day'>('hour');\n  \n  const variantNames = experiment.variants.map(v => v.name);\n  const variantVisitors = experiment.variants.map(v => v.visitors);\n  const variantConversions = experiment.variants.map(v => v.conversions);\n  const variantRevenue = experiment.variants.map(v => v.revenue);\n  \n  // Get trend data from live updates\n  const timestamps = experiment.liveUpdates.map(update => {\n    const date = new Date(update.timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  });\n  \n  const controlVisitorsTrend = experiment.liveUpdates.map(update => update.control.visitors);\n  const variantVisitorsTrend = experiment.liveUpdates.map(update => update.variantB.visitors);\n  \n  const controlConversionsTrend = experiment.liveUpdates.map(update => update.control.conversions);\n  const variantConversionsTrend = experiment.liveUpdates.map(update => update.variantB.conversions);\n  \n  const barData = {\n    labels: variantNames,\n    datasets: [\n      {\n        label: 'Visitors',\n        data: variantVisitors,\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n      {\n        label: 'Conversions',\n        data: variantConversions,\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n      },\n      {\n        label: 'Revenue ($)',\n        data: variantRevenue,\n        backgroundColor: 'rgba(255, 159, 64, 0.5)',\n      },\n    ],\n  };\n  \n  const lineData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Control Visitors',\n        data: controlVisitorsTrend,\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n      {\n        label: 'Variant B Visitors',\n        data: variantVisitorsTrend,\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n      },\n    ],\n  };\n  \n  const conversionLineData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Control Conversions',\n        data: controlConversionsTrend,\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Variant B Conversions',\n        data: variantConversionsTrend,\n        borderColor: 'rgb(153, 102, 255)',\n        backgroundColor: 'rgba(153, 102, 255, 0.5)',\n      },\n    ],\n  };\n  \n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6\">\n        <h2 className=\"text-xl font-semibold\">Experiment Performance</h2>\n        \n        <div className=\"flex space-x-2 mt-2 md:mt-0\">\n          <button\n            onClick={() => setTimeRange('hour')}\n            className={`px-3 py-1 rounded text-sm ${timeRange === 'hour' ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700'}`}\n          >\n            Last Hour\n          </button>\n          <button\n            onClick={() => setTimeRange('day')}\n            className={`px-3 py-1 rounded text-sm ${timeRange === 'day' ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700'}`}\n          >\n            Last Day\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 gap-6\">\n        <div className=\"h-80\">\n          <h3 className=\"text-lg font-medium mb-2\">Variant Comparison</h3>\n          <div className=\"h-64\">\n            <Bar \n              data={barData} \n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                  tooltip: {\n                    callbacks: {\n                      label: function(context) {\n                        const label = context.dataset.label || '';\n                        const value = context.parsed.y;\n                        if (label === 'Revenue ($)') {\n                          return `${label}: $${value}`;\n                        }\n                        return `${label}: ${value}`;\n                      }\n                    }\n                  }\n                }\n              }} \n            />\n          </div>\n        </div>\n        \n        <div className=\"h-80\">\n          <h3 className=\"text-lg font-medium mb-2\">Visitors Trend</h3>\n          <div className=\"h-64\">\n            <Line \n              data={lineData} \n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n              }} \n            />\n          </div>\n        </div>\n        \n        <div className=\"h-80\">\n          <h3 className=\"text-lg font-medium mb-2\">Conversions Trend</h3>\n          <div className=\"h-64\">\n            <Line \n              data={conversionLineData} \n              options={{\n                responsive: true,\n                maintainAspectRatio: false,\n              }} \n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 657, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/components/EventLogPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { EventLog } from '../types/experiments';\nimport { formatDate } from '../utils/dateUtils';\n\ninterface EventLogPanelProps {\n  logs: EventLog[];\n}\n\nexport default function EventLogPanel({ logs }: EventLogPanelProps) {\n  const [filter, setFilter] = useState<string>('all');\n  \n  const filteredLogs = filter === 'all' \n    ? logs \n    : logs.filter(log => log.eventType === filter);\n  \n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 h-full\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-4\">\n        <h2 className=\"text-xl font-semibold\">Event Log</h2>\n        \n        <div className=\"flex space-x-2 mt-2 md:mt-0 text-sm\">\n          <button\n            onClick={() => setFilter('all')}\n            className={`px-2 py-1 rounded ${filter === 'all' ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700'}`}\n          >\n            All\n          </button>\n          <button\n            onClick={() => setFilter('visitor')}\n            className={`px-2 py-1 rounded ${filter === 'visitor' ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700'}`}\n          >\n            Visitors\n          </button>\n          <button\n            onClick={() => setFilter('conversion')}\n            className={`px-2 py-1 rounded ${filter === 'conversion' ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700'}`}\n          >\n            Conversions\n          </button>\n          <button\n            onClick={() => setFilter('milestone')}\n            className={`px-2 py-1 rounded ${filter === 'milestone' ? 'bg-blue-500 text-white' : 'bg-gray-100 text-gray-700'}`}\n          >\n            Milestones\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"overflow-y-auto max-h-[600px] pr-2\">\n        {filteredLogs.length > 0 ? (\n          <ul className=\"space-y-3\">\n            {filteredLogs.map((log) => (\n              <LogItem key={log.id} log={log} />\n            ))}\n          </ul>\n        ) : (\n          <div className=\"text-center py-6 text-gray-500\">\n            No logs available\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface LogItemProps {\n  log: EventLog;\n}\n\nfunction LogItem({ log }: LogItemProps) {\n  const getEventTypeColor = (type: string) => {\n    switch(type) {\n      case 'visitor': return 'bg-blue-100 text-blue-800';\n      case 'conversion': return 'bg-green-100 text-green-800';\n      case 'milestone': return 'bg-purple-100 text-purple-800';\n      case 'revenue': return 'bg-yellow-100 text-yellow-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n  \n  return (\n    <li className=\"border border-gray-100 rounded-lg p-3 hover:bg-gray-50 transition-colors duration-150\">\n      <div className=\"flex justify-between items-start mb-2\">\n        <span className={`px-2 py-1 rounded text-xs font-medium ${getEventTypeColor(log.eventType)}`}>\n          {log.eventType.charAt(0).toUpperCase() + log.eventType.slice(1)}\n        </span>\n        <span className=\"text-xs text-gray-500\">{formatDate(log.timestamp)}</span>\n      </div>\n      <p className=\"text-sm text-gray-700\">{log.message}</p>\n      {log.data && (\n        <div className=\"mt-2 text-xs bg-gray-50 p-2 rounded\">\n          <pre className=\"whitespace-pre-wrap\">{JSON.stringify(log.data, null, 2)}</pre>\n        </div>\n      )}\n    </li>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAUe,SAAS,cAAc,EAAE,IAAI,EAAsB;;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE7C,MAAM,eAAe,WAAW,QAC5B,OACA,KAAK,MAAM,CAAC,CAAA,MAAO,IAAI,SAAS,KAAK;IAEzC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwB;;;;;;kCAEtC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS,IAAM,UAAU;gCACzB,WAAW,CAAC,kBAAkB,EAAE,WAAW,QAAQ,2BAA2B,6BAA6B;0CAC5G;;;;;;0CAGD,6LAAC;gCACC,SAAS,IAAM,UAAU;gCACzB,WAAW,CAAC,kBAAkB,EAAE,WAAW,YAAY,2BAA2B,6BAA6B;0CAChH;;;;;;0CAGD,6LAAC;gCACC,SAAS,IAAM,UAAU;gCACzB,WAAW,CAAC,kBAAkB,EAAE,WAAW,eAAe,2BAA2B,6BAA6B;0CACnH;;;;;;0CAGD,6LAAC;gCACC,SAAS,IAAM,UAAU;gCACzB,WAAW,CAAC,kBAAkB,EAAE,WAAW,cAAc,2BAA2B,6BAA6B;0CAClH;;;;;;;;;;;;;;;;;;0BAML,6LAAC;gBAAI,WAAU;0BACZ,aAAa,MAAM,GAAG,kBACrB,6LAAC;oBAAG,WAAU;8BACX,aAAa,GAAG,CAAC,CAAC,oBACjB,6LAAC;4BAAqB,KAAK;2BAAb,IAAI,EAAE;;;;;;;;;yCAIxB,6LAAC;oBAAI,WAAU;8BAAiC;;;;;;;;;;;;;;;;;AAO1D;GAvDwB;KAAA;AA6DxB,SAAS,QAAQ,EAAE,GAAG,EAAgB;IACpC,MAAM,oBAAoB,CAAC;QACzB,OAAO;YACL,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAc,OAAO;YAC1B,KAAK;gBAAa,OAAO;YACzB,KAAK;gBAAW,OAAO;YACvB;gBAAS,OAAO;QAClB;IACF;IAEA,qBACE,6LAAC;QAAG,WAAU;;0BACZ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAW,CAAC,sCAAsC,EAAE,kBAAkB,IAAI,SAAS,GAAG;kCACzF,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC;;;;;;kCAE/D,6LAAC;wBAAK,WAAU;kCAAyB,CAAA,GAAA,4HAAA,CAAA,aAAU,AAAD,EAAE,IAAI,SAAS;;;;;;;;;;;;0BAEnE,6LAAC;gBAAE,WAAU;0BAAyB,IAAI,OAAO;;;;;;YAChD,IAAI,IAAI,kBACP,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BAAuB,KAAK,SAAS,CAAC,IAAI,IAAI,EAAE,MAAM;;;;;;;;;;;;;;;;;AAK/E;MA3BS","debugId":null}},
    {"offset": {"line": 860, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/hooks/useExperimentData.ts"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { Experiment, EventLog, ExperimentMetrics } from '@shared/types/experiments';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5001';\n\nexport function useExperimentData() {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [experiments, setExperiments] = useState<Experiment[]>([]);\n  const [metrics, setMetrics] = useState<ExperimentMetrics | null>(null);\n  const [logs, setLogs] = useState<EventLog[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const socketInstance = io(API_URL);\n    setSocket(socketInstance);\n\n    // Clean up on unmount\n    return () => {\n      socketInstance.disconnect();\n    };\n  }, []);\n\n  // Set up event listeners\n  useEffect(() => {\n    if (!socket) return;\n\n    // Listen for experiment updates\n    socket.on('experimentUpdate', (updatedExperiments: Experiment[]) => {\n      setExperiments(updatedExperiments);\n      setLoading(false);\n    });\n\n    // Listen for new logs\n    socket.on('newLog', (newLog: EventLog) => {\n      setLogs(prevLogs => [newLog, ...prevLogs].slice(0, 100)); // Keep only the latest 100 logs\n    });\n\n    // Error handling\n    socket.on('connect_error', (err) => {\n      console.error('Socket connection error:', err);\n      setError('Failed to connect to the server');\n      setLoading(false);\n    });\n\n    // Clean up listeners\n    return () => {\n      socket.off('experimentUpdate');\n      socket.off('newLog');\n      socket.off('connect_error');\n    };\n  }, [socket]);\n\n  // Initial data fetching\n  useEffect(() => {\n    async function fetchInitialData() {\n      try {\n        // Fetch experiments\n        const experimentsResponse = await fetch(`${API_URL}/api/experiments/live`);\n        if (!experimentsResponse.ok) throw new Error('Failed to fetch experiments');\n        const experimentsData = await experimentsResponse.json();\n        setExperiments(experimentsData);\n\n        // Fetch metrics for the first experiment if available\n        if (experimentsData.length > 0) {\n          const experimentId = experimentsData[0].experimentId;\n          const metricsResponse = await fetch(`${API_URL}/api/experiments/${experimentId}/metrics`);\n          if (!metricsResponse.ok) throw new Error('Failed to fetch metrics');\n          const metricsData = await metricsResponse.json();\n          setMetrics(metricsData);\n\n          // Simulate some initial logs\n          const sampleLogs: EventLog[] = [\n            {\n              id: '1',\n              experimentId,\n              timestamp: new Date().toISOString(),\n              eventType: 'visitor',\n              message: 'New visitor in Control group'\n            },\n            {\n              id: '2',\n              experimentId,\n              timestamp: new Date(Date.now() - 60000).toISOString(),\n              eventType: 'conversion',\n              message: 'Conversion in Variant B group'\n            },\n            {\n              id: '3',\n              experimentId,\n              timestamp: new Date(Date.now() - 120000).toISOString(),\n              eventType: 'milestone',\n              message: 'Experiment reached 1000 total visitors'\n            }\n          ];\n          setLogs(sampleLogs);\n        }\n\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial data:', err);\n        setError('Failed to fetch experiment data');\n        setLoading(false);\n      }\n    }\n\n    fetchInitialData();\n  }, []);\n\n  return { experiments, metrics, logs, loading, error };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file:///Users/hianbattiston/Documents/apps/evolv-monitoring-tool/packages/frontend/app/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport Header from './Header';\nimport MetricsPanel from './MetricsPanel';\nimport VisualizationSection from './VisualizationSection';\nimport EventLogPanel from './EventLogPanel';\nimport { useExperimentData } from '../hooks/useExperimentData';\n\nexport default function Dashboard() {\n  const { experiments, metrics, logs, loading, error } = useExperimentData();\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null);\n  \n  useEffect(() => {\n    if (experiments.length > 0) {\n      setLastUpdated(new Date());\n    }\n  }, [experiments]);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          <p>Error loading experiment data. Please try again later.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const activeExperiment = experiments[0] || null;\n  \n  return (\n    <div className=\"container mx-auto px-4 py-6 max-w-screen-xl\">\n      <Header lastUpdated={lastUpdated} />\n      \n      {activeExperiment ? (\n        <>\n          <MetricsPanel metrics={metrics} experiment={activeExperiment} />\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-6\">\n            <div className=\"lg:col-span-2\">\n              <VisualizationSection experiment={activeExperiment} />\n            </div>\n            <div className=\"lg:col-span-1\">\n              <EventLogPanel logs={logs} />\n            </div>\n          </div>\n        </>\n      ) : (\n        <div className=\"bg-white shadow-md rounded-lg p-6 mt-6\">\n          <p className=\"text-gray-500 text-center\">No active experiments found.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,oBAAiB,AAAD;IACvE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,YAAY,MAAM,GAAG,GAAG;gBAC1B,eAAe,IAAI;YACrB;QACF;8BAAG;QAAC;KAAY;IAEhB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;8BAAE;;;;;;;;;;;;;;;;IAIX;IAEA,MAAM,mBAAmB,WAAW,CAAC,EAAE,IAAI;IAE3C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;gBAAC,aAAa;;;;;;YAEpB,iCACC;;kCACE,6LAAC,qIAAA,CAAA,UAAY;wBAAC,SAAS;wBAAS,YAAY;;;;;;kCAE5C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,6IAAA,CAAA,UAAoB;oCAAC,YAAY;;;;;;;;;;;0CAEpC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,sIAAA,CAAA,UAAa;oCAAC,MAAM;;;;;;;;;;;;;;;;;;6CAK3B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAA4B;;;;;;;;;;;;;;;;;AAKnD;GAtDwB;;QACiC,oIAAA,CAAA,oBAAiB;;;KADlD","debugId":null}}]
}